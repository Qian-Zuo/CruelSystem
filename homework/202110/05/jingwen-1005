# design consistent hashing

目标: horizontal scaling

普通方法：服务器index = 哈希值%服务器数量 

一致性哈希想解决的问题：当第一个cache服务器down了的时候，服务器数量变了，所有的服务器index都会发生变化，这时候会出现大量的cache miss

解决方法：与其用一个哈希表，不如用一个环，将哈希值均匀分布在环上，这样在的时候可以尽量少的移动每一个哈希值对应的节点

算法：比如总共有四个节点，每个节点分别在90度的位置，90，180，270，360。下次来了一个节点应该在170的位置，于是把最近的下一个节点（度数比他大的一个节点分给他），把180分给他。

如果少了一个节点，则把这个节点上的都分到下一个稍大度数的节点上
