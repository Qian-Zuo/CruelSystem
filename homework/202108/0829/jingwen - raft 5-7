5.5 追随者和候选人崩溃

很简单的case，只要恢复后重新接受rpc就可以了

5.6时序性的要求

安全性不依赖于时序（早做晚做结果都应该一致）

领导人选举有一定的时序要求，使用时需要选择恰当的electionTImeOut



6 修改配置的问题

background：集群需要只要一些配置，比如总共有多少台活着的机器，每个机器的ip地址，之类的。

scenario：需要kill了老的机器增加新的机器，这样更改了配置，但是有一部分老机器并不知道配置被更改了



三个问题：

1 空的新机器没法参加选举和运行，解决：需要ramp up一段时间才能加入，机器里条目up to date之前不能参加选举

2 领导人可能不是新配置中的一员，解决：领导人一旦提交了cnew就退位

3 移除不在cnew的机器会发生扰乱，不懂。 解决：electionTimeOut的一小段时间内不要响应vote RPC（不懂）



Q：当机器里面log太多，根本不可能让新加的机器ramp up怎么办？

A：

1 快照

2 增量压缩 incremental approaches 不懂



不过快照是每个人都可以自主生成的，不需要领导同意生成。

Q：这会违反强一致性吗？

A：不会，因为强一致性（全部听领导的）是为了解决大家没达成一致的状态下的问题，能到快照里面的都已经达成一致了。



Q：如果follower跟leader的log对不上，正在一个个往前找到最近的能对得上的地方，但follower已经把这里的放进快照了，怎么办？

